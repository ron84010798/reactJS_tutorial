{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ronald/reactJs/my-app_extend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n/*\nclass Square extends React.Component {\n\n  render() {\n    return (\n      <button className=\"square\"\n        onClick={() => {this.props.onClick({value:'X'})} }\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n*/\n\n/* Function Component: If the component only has the method render\n * and doesn't have its own state, it can be writen in Function Component format\n * */\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        location: null\n      }],\n      stepNumber: 0,\n      NextChar: 'X'\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.NextChar;\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        location: i\n      }]),\n      stepNumber: history.length,\n      NextChar: this.state.NextChar === 'X' ? 'O' : 'X'\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      NextChar: step % 2 === 0 ? 'X' : 'O'\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const row = Math.floor(step.location / 3);\n      const column = step.location % 3;\n      const coord = \" (\" + row + \", \" + column + \")\";\n      let desc = move ? 'Go to move #' + move + coord : 'Go to Game Start';\n\n      if (this.state.stepNumber === move) {\n        desc = \"<b>\" + desc + \"</b>\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this);\n    });\n    let status;\n\n    if (winner !== null) {\n      status = 'Winner: ' + winner;\n    } else if (isFull(current.squares) === true) {\n      status = 'Game Tied!';\n    } else {\n      status = 'Next player: ' + this.state.NextChar;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 149,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction isFull(squares) {\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] === null) return false;\n  }\n\n  return true;\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/home/ronald/reactJs/my-app_extend/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","location","stepNumber","NextChar","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","winner","moves","map","move","row","Math","floor","column","coord","desc","status","isFull","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n/*\nclass Square extends React.Component {\n\n  render() {\n    return (\n      <button className=\"square\"\n        onClick={() => {this.props.onClick({value:'X'})} }\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n*/\n\n/* Function Component: If the component only has the method render\n * and doesn't have its own state, it can be writen in Function Component format\n * */\nfunction Square(props){\n  return (\n    <button className=\"square\"\n      onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\nclass Board extends React.Component {\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}\n    />;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        location: null,\n      }],\n      stepNumber: 0,\n      NextChar: 'X',\n    }\n  }\n  handleClick(i){\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if(calculateWinner(squares) || squares[i]){\n      return;\n    }\n    squares[i] = this.state.NextChar;\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        location: i,\n      }]),\n      stepNumber: history.length,\n      NextChar: (this.state.NextChar === 'X' ? 'O':'X'),\n    });\n  }\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n      NextChar: ((step % 2) === 0 ? 'X':'O'),\n    })\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const row = Math.floor(step.location / 3);\n      const column = (step.location % 3);\n      const coord = \" (\" + row + \", \" + column + \")\"\n\n      let desc = move ?\n        'Go to move #' + move + coord:\n        'Go to Game Start';\n\n      if (this.state.stepNumber === move){\n        desc = \"<b>\" + desc +\"</b>\";\n      }\n      return (\n        <li key={move}>\n          <button onClick={() =>\n              this.jumpTo(move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n    let status;\n    if (winner !== null) {\n      status = 'Winner: ' + winner;\n    } else if (isFull(current.squares) === true) {\n      status = 'Game Tied!';\n    } else {\n      status = 'Next player: ' + this.state.NextChar;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction isFull(squares){\n  for (let i = 0; i < squares.length; i++){\n    if (squares[i] === null) return false;\n  }\n  return true;\n}\nfunction calculateWinner(squares){\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}